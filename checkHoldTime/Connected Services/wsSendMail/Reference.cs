//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace checkHoldTime.wsSendMail {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsSendMail.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool SendMail(string SenderMailAddress, string SenderDisplayName, string MailTo, string MailCc, string MailSubject, bool IsBodyHtml, string MailBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Send_Mail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Send_Mail(string SenderMailAddress, string SenderDisplayName, string MailTo, string MailCc, string MailSubject, bool IsBodyHtml, string MailBody, string AttachFilePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Mail_Relay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Mail_Relay(string SenderMailAddress, string SenderDisplayName, string MailTo, string MailCc, string MailBcc, string MailSubject, bool IsBodyHtml, string MailBody, string AttachFilePath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : checkHoldTime.wsSendMail.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<checkHoldTime.wsSendMail.WebServiceSoap>, checkHoldTime.wsSendMail.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public bool SendMail(string SenderMailAddress, string SenderDisplayName, string MailTo, string MailCc, string MailSubject, bool IsBodyHtml, string MailBody) {
            return base.Channel.SendMail(SenderMailAddress, SenderDisplayName, MailTo, MailCc, MailSubject, IsBodyHtml, MailBody);
        }
        
        public bool Send_Mail(string SenderMailAddress, string SenderDisplayName, string MailTo, string MailCc, string MailSubject, bool IsBodyHtml, string MailBody, string AttachFilePath) {
            return base.Channel.Send_Mail(SenderMailAddress, SenderDisplayName, MailTo, MailCc, MailSubject, IsBodyHtml, MailBody, AttachFilePath);
        }
        
        public bool Mail_Relay(string SenderMailAddress, string SenderDisplayName, string MailTo, string MailCc, string MailBcc, string MailSubject, bool IsBodyHtml, string MailBody, string AttachFilePath) {
            return base.Channel.Mail_Relay(SenderMailAddress, SenderDisplayName, MailTo, MailCc, MailBcc, MailSubject, IsBodyHtml, MailBody, AttachFilePath);
        }
    }
}
